// Code generated by protoc-gen-go.
// source: sendrecv.proto
// DO NOT EDIT!

/*
Package sendrecv is a generated protocol buffer package.

имя пакета, в результирующем go-файле это сохраниться

It is generated from these files:
	sendrecv.proto

It has these top-level messages:
	Msg
*/
package sendrecv

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type Msg struct {
	// тип имя_поля = номер_поля
	// repeated Key        keys = 100;
	Vals             []*Msg_SendValues `protobuf:"bytes,101,rep,name=vals" json:"vals,omitempty"`
	Reset_           *bool             `protobuf:"varint,102,opt,name=reset,def=1" json:"reset,omitempty"`
	XXX_unrecognized []byte            `json:"-"`
}

func (m *Msg) Reset()                    { *m = Msg{} }
func (m *Msg) String() string            { return proto.CompactTextString(m) }
func (*Msg) ProtoMessage()               {}
func (*Msg) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

const Default_Msg_Reset bool = true

func (m *Msg) GetVals() []*Msg_SendValues {
	if m != nil {
		return m.Vals
	}
	return nil
}

func (m *Msg) GetReset_() bool {
	if m != nil && m.Reset_ != nil {
		return *m.Reset_
	}
	return Default_Msg_Reset
}

type Msg_Key struct {
	// Types that are valid to be assigned to Key:
	//	*Msg_Key_KeyString
	//	*Msg_Key_HashKey
	Key              isMsg_Key_Key `protobuf_oneof:"key"`
	Hashvalue        *uint64       `protobuf:"varint,3,req,name=hashvalue" json:"hashvalue,omitempty"`
	TTL              *uint32       `protobuf:"varint,4,opt,name=TTL" json:"TTL,omitempty"`
	XXX_unrecognized []byte        `json:"-"`
}

func (m *Msg_Key) Reset()                    { *m = Msg_Key{} }
func (m *Msg_Key) String() string            { return proto.CompactTextString(m) }
func (*Msg_Key) ProtoMessage()               {}
func (*Msg_Key) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0, 0} }

type isMsg_Key_Key interface {
	isMsg_Key_Key()
}

type Msg_Key_KeyString struct {
	KeyString string `protobuf:"bytes,1,opt,name=keyString,oneof"`
}
type Msg_Key_HashKey struct {
	HashKey uint64 `protobuf:"varint,2,opt,name=hashKey,oneof"`
}

func (*Msg_Key_KeyString) isMsg_Key_Key() {}
func (*Msg_Key_HashKey) isMsg_Key_Key()   {}

func (m *Msg_Key) GetKey() isMsg_Key_Key {
	if m != nil {
		return m.Key
	}
	return nil
}

func (m *Msg_Key) GetKeyString() string {
	if x, ok := m.GetKey().(*Msg_Key_KeyString); ok {
		return x.KeyString
	}
	return ""
}

func (m *Msg_Key) GetHashKey() uint64 {
	if x, ok := m.GetKey().(*Msg_Key_HashKey); ok {
		return x.HashKey
	}
	return 0
}

func (m *Msg_Key) GetHashvalue() uint64 {
	if m != nil && m.Hashvalue != nil {
		return *m.Hashvalue
	}
	return 0
}

func (m *Msg_Key) GetTTL() uint32 {
	if m != nil && m.TTL != nil {
		return *m.TTL
	}
	return 0
}

// XXX_OneofFuncs is for the internal use of the proto package.
func (*Msg_Key) XXX_OneofFuncs() (func(msg proto.Message, b *proto.Buffer) error, func(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error), func(msg proto.Message) (n int), []interface{}) {
	return _Msg_Key_OneofMarshaler, _Msg_Key_OneofUnmarshaler, _Msg_Key_OneofSizer, []interface{}{
		(*Msg_Key_KeyString)(nil),
		(*Msg_Key_HashKey)(nil),
	}
}

func _Msg_Key_OneofMarshaler(msg proto.Message, b *proto.Buffer) error {
	m := msg.(*Msg_Key)
	// key
	switch x := m.Key.(type) {
	case *Msg_Key_KeyString:
		b.EncodeVarint(1<<3 | proto.WireBytes)
		b.EncodeStringBytes(x.KeyString)
	case *Msg_Key_HashKey:
		b.EncodeVarint(2<<3 | proto.WireVarint)
		b.EncodeVarint(uint64(x.HashKey))
	case nil:
	default:
		return fmt.Errorf("Msg_Key.Key has unexpected type %T", x)
	}
	return nil
}

func _Msg_Key_OneofUnmarshaler(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error) {
	m := msg.(*Msg_Key)
	switch tag {
	case 1: // key.keyString
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		x, err := b.DecodeStringBytes()
		m.Key = &Msg_Key_KeyString{x}
		return true, err
	case 2: // key.hashKey
		if wire != proto.WireVarint {
			return true, proto.ErrInternalBadWireType
		}
		x, err := b.DecodeVarint()
		m.Key = &Msg_Key_HashKey{x}
		return true, err
	default:
		return false, nil
	}
}

func _Msg_Key_OneofSizer(msg proto.Message) (n int) {
	m := msg.(*Msg_Key)
	// key
	switch x := m.Key.(type) {
	case *Msg_Key_KeyString:
		n += proto.SizeVarint(1<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(len(x.KeyString)))
		n += len(x.KeyString)
	case *Msg_Key_HashKey:
		n += proto.SizeVarint(2<<3 | proto.WireVarint)
		n += proto.SizeVarint(uint64(x.HashKey))
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	return n
}

type Msg_KeyValue struct {
	Key              *string `protobuf:"bytes,10,req,name=key" json:"key,omitempty"`
	Value            *string `protobuf:"bytes,11,req,name=value" json:"value,omitempty"`
	TTL              *uint32 `protobuf:"varint,12,opt,name=TTL" json:"TTL,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *Msg_KeyValue) Reset()                    { *m = Msg_KeyValue{} }
func (m *Msg_KeyValue) String() string            { return proto.CompactTextString(m) }
func (*Msg_KeyValue) ProtoMessage()               {}
func (*Msg_KeyValue) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0, 1} }

func (m *Msg_KeyValue) GetKey() string {
	if m != nil && m.Key != nil {
		return *m.Key
	}
	return ""
}

func (m *Msg_KeyValue) GetValue() string {
	if m != nil && m.Value != nil {
		return *m.Value
	}
	return ""
}

func (m *Msg_KeyValue) GetTTL() uint32 {
	if m != nil && m.TTL != nil {
		return *m.TTL
	}
	return 0
}

type Msg_DataSet struct {
	Value            []string `protobuf:"bytes,21,rep,name=value" json:"value,omitempty"`
	Ordered          *bool    `protobuf:"varint,22,req,name=ordered,def=0" json:"ordered,omitempty"`
	XXX_unrecognized []byte   `json:"-"`
}

func (m *Msg_DataSet) Reset()                    { *m = Msg_DataSet{} }
func (m *Msg_DataSet) String() string            { return proto.CompactTextString(m) }
func (*Msg_DataSet) ProtoMessage()               {}
func (*Msg_DataSet) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0, 2} }

const Default_Msg_DataSet_Ordered bool = false

func (m *Msg_DataSet) GetValue() []string {
	if m != nil {
		return m.Value
	}
	return nil
}

func (m *Msg_DataSet) GetOrdered() bool {
	if m != nil && m.Ordered != nil {
		return *m.Ordered
	}
	return Default_Msg_DataSet_Ordered
}

type Msg_KeyValueMap struct {
	Keys             []string `protobuf:"bytes,30,rep,name=keys" json:"keys,omitempty"`
	Values           []string `protobuf:"bytes,31,rep,name=values" json:"values,omitempty"`
	XXX_unrecognized []byte   `json:"-"`
}

func (m *Msg_KeyValueMap) Reset()                    { *m = Msg_KeyValueMap{} }
func (m *Msg_KeyValueMap) String() string            { return proto.CompactTextString(m) }
func (*Msg_KeyValueMap) ProtoMessage()               {}
func (*Msg_KeyValueMap) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0, 3} }

func (m *Msg_KeyValueMap) GetKeys() []string {
	if m != nil {
		return m.Keys
	}
	return nil
}

func (m *Msg_KeyValueMap) GetValues() []string {
	if m != nil {
		return m.Values
	}
	return nil
}

type Msg_SendValues struct {
	Key *string `protobuf:"bytes,111,req,name=key" json:"key,omitempty"`
	TTL *uint32 `protobuf:"varint,110,opt,name=TTL" json:"TTL,omitempty"`
	// Types that are valid to be assigned to Value:
	//	*Msg_SendValues_Strvalue
	//	*Msg_SendValues_Mapvalue
	//	*Msg_SendValues_Setvalue
	//	*Msg_SendValues_Listvalue
	Value            isMsg_SendValues_Value `protobuf_oneof:"value"`
	XXX_unrecognized []byte                 `json:"-"`
}

func (m *Msg_SendValues) Reset()                    { *m = Msg_SendValues{} }
func (m *Msg_SendValues) String() string            { return proto.CompactTextString(m) }
func (*Msg_SendValues) ProtoMessage()               {}
func (*Msg_SendValues) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0, 4} }

type isMsg_SendValues_Value interface {
	isMsg_SendValues_Value()
}

type Msg_SendValues_Strvalue struct {
	Strvalue string `protobuf:"bytes,112,opt,name=strvalue,oneof"`
}
type Msg_SendValues_Mapvalue struct {
	Mapvalue *Msg_KeyValueMap `protobuf:"bytes,113,opt,name=mapvalue,oneof"`
}
type Msg_SendValues_Setvalue struct {
	Setvalue *Msg_DataSet `protobuf:"bytes,114,opt,name=setvalue,oneof"`
}
type Msg_SendValues_Listvalue struct {
	Listvalue *Msg_DataSet `protobuf:"bytes,115,opt,name=listvalue,oneof"`
}

func (*Msg_SendValues_Strvalue) isMsg_SendValues_Value()  {}
func (*Msg_SendValues_Mapvalue) isMsg_SendValues_Value()  {}
func (*Msg_SendValues_Setvalue) isMsg_SendValues_Value()  {}
func (*Msg_SendValues_Listvalue) isMsg_SendValues_Value() {}

func (m *Msg_SendValues) GetValue() isMsg_SendValues_Value {
	if m != nil {
		return m.Value
	}
	return nil
}

func (m *Msg_SendValues) GetKey() string {
	if m != nil && m.Key != nil {
		return *m.Key
	}
	return ""
}

func (m *Msg_SendValues) GetTTL() uint32 {
	if m != nil && m.TTL != nil {
		return *m.TTL
	}
	return 0
}

func (m *Msg_SendValues) GetStrvalue() string {
	if x, ok := m.GetValue().(*Msg_SendValues_Strvalue); ok {
		return x.Strvalue
	}
	return ""
}

func (m *Msg_SendValues) GetMapvalue() *Msg_KeyValueMap {
	if x, ok := m.GetValue().(*Msg_SendValues_Mapvalue); ok {
		return x.Mapvalue
	}
	return nil
}

func (m *Msg_SendValues) GetSetvalue() *Msg_DataSet {
	if x, ok := m.GetValue().(*Msg_SendValues_Setvalue); ok {
		return x.Setvalue
	}
	return nil
}

func (m *Msg_SendValues) GetListvalue() *Msg_DataSet {
	if x, ok := m.GetValue().(*Msg_SendValues_Listvalue); ok {
		return x.Listvalue
	}
	return nil
}

// XXX_OneofFuncs is for the internal use of the proto package.
func (*Msg_SendValues) XXX_OneofFuncs() (func(msg proto.Message, b *proto.Buffer) error, func(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error), func(msg proto.Message) (n int), []interface{}) {
	return _Msg_SendValues_OneofMarshaler, _Msg_SendValues_OneofUnmarshaler, _Msg_SendValues_OneofSizer, []interface{}{
		(*Msg_SendValues_Strvalue)(nil),
		(*Msg_SendValues_Mapvalue)(nil),
		(*Msg_SendValues_Setvalue)(nil),
		(*Msg_SendValues_Listvalue)(nil),
	}
}

func _Msg_SendValues_OneofMarshaler(msg proto.Message, b *proto.Buffer) error {
	m := msg.(*Msg_SendValues)
	// value
	switch x := m.Value.(type) {
	case *Msg_SendValues_Strvalue:
		b.EncodeVarint(112<<3 | proto.WireBytes)
		b.EncodeStringBytes(x.Strvalue)
	case *Msg_SendValues_Mapvalue:
		b.EncodeVarint(113<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Mapvalue); err != nil {
			return err
		}
	case *Msg_SendValues_Setvalue:
		b.EncodeVarint(114<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Setvalue); err != nil {
			return err
		}
	case *Msg_SendValues_Listvalue:
		b.EncodeVarint(115<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Listvalue); err != nil {
			return err
		}
	case nil:
	default:
		return fmt.Errorf("Msg_SendValues.Value has unexpected type %T", x)
	}
	return nil
}

func _Msg_SendValues_OneofUnmarshaler(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error) {
	m := msg.(*Msg_SendValues)
	switch tag {
	case 112: // value.strvalue
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		x, err := b.DecodeStringBytes()
		m.Value = &Msg_SendValues_Strvalue{x}
		return true, err
	case 113: // value.mapvalue
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(Msg_KeyValueMap)
		err := b.DecodeMessage(msg)
		m.Value = &Msg_SendValues_Mapvalue{msg}
		return true, err
	case 114: // value.setvalue
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(Msg_DataSet)
		err := b.DecodeMessage(msg)
		m.Value = &Msg_SendValues_Setvalue{msg}
		return true, err
	case 115: // value.listvalue
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(Msg_DataSet)
		err := b.DecodeMessage(msg)
		m.Value = &Msg_SendValues_Listvalue{msg}
		return true, err
	default:
		return false, nil
	}
}

func _Msg_SendValues_OneofSizer(msg proto.Message) (n int) {
	m := msg.(*Msg_SendValues)
	// value
	switch x := m.Value.(type) {
	case *Msg_SendValues_Strvalue:
		n += proto.SizeVarint(112<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(len(x.Strvalue)))
		n += len(x.Strvalue)
	case *Msg_SendValues_Mapvalue:
		s := proto.Size(x.Mapvalue)
		n += proto.SizeVarint(113<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case *Msg_SendValues_Setvalue:
		s := proto.Size(x.Setvalue)
		n += proto.SizeVarint(114<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case *Msg_SendValues_Listvalue:
		s := proto.Size(x.Listvalue)
		n += proto.SizeVarint(115<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	return n
}

func init() {
	proto.RegisterType((*Msg)(nil), "sendrecv.Msg")
	proto.RegisterType((*Msg_Key)(nil), "sendrecv.Msg.Key")
	proto.RegisterType((*Msg_KeyValue)(nil), "sendrecv.Msg.KeyValue")
	proto.RegisterType((*Msg_DataSet)(nil), "sendrecv.Msg.DataSet")
	proto.RegisterType((*Msg_KeyValueMap)(nil), "sendrecv.Msg.KeyValueMap")
	proto.RegisterType((*Msg_SendValues)(nil), "sendrecv.Msg.SendValues")
}

func init() { proto.RegisterFile("sendrecv.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 333 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x02, 0xff, 0x7c, 0x90, 0x3f, 0x4f, 0x02, 0x41,
	0x10, 0xc5, 0x85, 0xbd, 0xf3, 0xee, 0xe6, 0x80, 0xc4, 0x35, 0x90, 0xf5, 0x0a, 0x25, 0x16, 0x06,
	0x35, 0x12, 0x83, 0x1d, 0x25, 0xb1, 0x30, 0x51, 0x2a, 0x88, 0xfd, 0x46, 0x86, 0x3f, 0x11, 0xb9,
	0x73, 0x77, 0x21, 0xe1, 0x23, 0xfa, 0x8d, 0x2c, 0x9d, 0xdd, 0x5b, 0x14, 0x1a, 0xcb, 0x79, 0xef,
	0xf7, 0xe6, 0x1f, 0x34, 0x34, 0xae, 0x26, 0x0a, 0xdf, 0x36, 0xdd, 0x42, 0xe5, 0x26, 0xe7, 0xf1,
	0xae, 0xbe, 0xfc, 0x66, 0xc0, 0x86, 0x7a, 0xc6, 0xaf, 0x20, 0xd8, 0xc8, 0xa5, 0x16, 0xd8, 0x66,
	0x9d, 0xb4, 0x27, 0xba, 0xbf, 0x01, 0x32, 0xbb, 0x23, 0x2a, 0x5e, 0xe5, 0x72, 0x8d, 0x9a, 0x9f,
	0x42, 0xa8, 0x50, 0xa3, 0x11, 0xd3, 0x76, 0xa5, 0x13, 0xf7, 0x03, 0xa3, 0xd6, 0x98, 0x8d, 0x81,
	0x3d, 0xe3, 0x96, 0xbc, 0xe4, 0x1d, 0xb7, 0x23, 0xa3, 0x16, 0xab, 0x99, 0xa8, 0x90, 0x9f, 0x3c,
	0x1d, 0xf1, 0x13, 0x88, 0xe6, 0x52, 0xcf, 0xc9, 0x17, 0x55, 0x92, 0x02, 0x27, 0x25, 0x56, 0xda,
	0xd8, 0x8e, 0x82, 0xb5, 0xab, 0x9d, 0x80, 0xa7, 0xc0, 0xc6, 0xe3, 0x17, 0x11, 0x10, 0x51, 0x1f,
	0x84, 0xc0, 0xa8, 0x4f, 0xf6, 0x00, 0x31, 0xa5, 0xdc, 0x5c, 0xeb, 0x93, 0x24, 0x80, 0xe0, 0x84,
	0xd7, 0x21, 0x2c, 0xb3, 0xa9, 0x2b, 0x7d, 0xb6, 0x66, 0xb3, 0xd9, 0x3d, 0x44, 0x8f, 0xd2, 0xc8,
	0x11, 0x9a, 0x3f, 0xac, 0x49, 0x37, 0x25, 0xbc, 0x05, 0x51, 0xae, 0x26, 0xa8, 0x70, 0x22, 0x5a,
	0x94, 0x8b, 0xfb, 0xe1, 0x94, 0x0e, 0xc6, 0xec, 0x16, 0xd2, 0xdd, 0x98, 0xa1, 0x2c, 0x78, 0x0d,
	0x02, 0x9a, 0xa4, 0xc5, 0xb9, 0x0b, 0x35, 0xe0, 0xd8, 0xf5, 0xd0, 0xe2, 0xc2, 0xd6, 0xd9, 0x57,
	0x05, 0x60, 0xef, 0x1b, 0x7e, 0xad, 0x7c, 0x7f, 0x8f, 0x95, 0xdd, 0x83, 0x73, 0x88, 0xb5, 0x51,
	0xe5, 0xfc, 0xc2, 0xbf, 0xe2, 0x0e, 0xe2, 0x0f, 0x59, 0x94, 0xda, 0x27, 0x69, 0x69, 0xef, 0xec,
	0xf0, 0xcf, 0x7b, 0x7b, 0x10, 0x7e, 0x4d, 0x2d, 0xd0, 0x94, 0xb8, 0x72, 0x78, 0xf3, 0x10, 0xf7,
	0x87, 0x12, 0x7a, 0x03, 0xc9, 0x72, 0xa1, 0x3d, 0xab, 0xff, 0x65, 0x07, 0x91, 0x7f, 0xcb, 0x4f,
	0x00, 0x00, 0x00, 0xff, 0xff, 0x4c, 0x1a, 0xca, 0x57, 0x15, 0x02, 0x00, 0x00,
}
